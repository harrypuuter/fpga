|ampel
clk => teiler:clock.clock
light0[0] <= lamp:ampel0.light[0]
light0[1] <= lamp:ampel0.light[1]
light0[2] <= lamp:ampel0.light[2]
light1[0] <= lamp:ampel1.light[0]
light1[1] <= lamp:ampel1.light[1]
light1[2] <= lamp:ampel1.light[2]
light2[0] <= lamp:ampel2.light[0]
light2[1] <= lamp:ampel2.light[1]
light2[2] <= lamp:ampel2.light[2]
light3[0] <= lamp:ampel3.light[0]
light3[1] <= lamp:ampel3.light[1]
light3[2] <= lamp:ampel3.light[2]


|ampel|lamp:ampel0
state[0] => Equal0.IN1
state[0] => Equal1.IN1
state[0] => Equal2.IN0
state[0] => Equal3.IN1
state[1] => Equal0.IN0
state[1] => Equal1.IN0
state[1] => Equal2.IN1
state[1] => Equal3.IN0
light[0] <= light[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|ampel|lamp:ampel1
state[0] => Equal0.IN1
state[0] => Equal1.IN1
state[0] => Equal2.IN0
state[0] => Equal3.IN1
state[1] => Equal0.IN0
state[1] => Equal1.IN0
state[1] => Equal2.IN1
state[1] => Equal3.IN0
light[0] <= light[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|ampel|lamp:ampel2
state[0] => Equal0.IN1
state[0] => Equal1.IN1
state[0] => Equal2.IN0
state[0] => Equal3.IN1
state[1] => Equal0.IN0
state[1] => Equal1.IN0
state[1] => Equal2.IN1
state[1] => Equal3.IN0
light[0] <= light[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|ampel|lamp:ampel3
state[0] => Equal0.IN1
state[0] => Equal1.IN1
state[0] => Equal2.IN0
state[0] => Equal3.IN1
state[1] => Equal0.IN0
state[1] => Equal1.IN0
state[1] => Equal2.IN1
state[1] => Equal3.IN0
light[0] <= light[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|ampel|teiler:clock
clock => lpm_counter:counter6.CLOCK
output <= toggler.DB_MAX_OUTPUT_PORT_TYPE


|ampel|teiler:clock|lpm_counter:counter6
clock => cntr_4vh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= <GND>
q[1] <= <GND>
q[2] <= <GND>
q[3] <= <GND>
q[4] <= <GND>
q[5] <= <GND>
cout <= cntr_4vh:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|ampel|teiler:clock|lpm_counter:counter6|cntr_4vh:auto_generated
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE


|ampel|teiler:clock|lpm_counter:counter12
clock => cntr_hpj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => cntr_hpj:auto_generated.sset
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_hpj:auto_generated.q[0]
q[1] <= cntr_hpj:auto_generated.q[1]
q[2] <= cntr_hpj:auto_generated.q[2]
q[3] <= cntr_hpj:auto_generated.q[3]
q[4] <= cntr_hpj:auto_generated.q[4]
q[5] <= cntr_hpj:auto_generated.q[5]
q[6] <= cntr_hpj:auto_generated.q[6]
q[7] <= cntr_hpj:auto_generated.q[7]
q[8] <= cntr_hpj:auto_generated.q[8]
q[9] <= cntr_hpj:auto_generated.q[9]
q[10] <= cntr_hpj:auto_generated.q[10]
q[11] <= cntr_hpj:auto_generated.q[11]
q[12] <= cntr_hpj:auto_generated.q[12]
q[13] <= cntr_hpj:auto_generated.q[13]
q[14] <= cntr_hpj:auto_generated.q[14]
q[15] <= cntr_hpj:auto_generated.q[15]
q[16] <= cntr_hpj:auto_generated.q[16]
q[17] <= cntr_hpj:auto_generated.q[17]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|ampel|teiler:clock|lpm_counter:counter12|cntr_hpj:auto_generated
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
sset => _.IN1
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN1


